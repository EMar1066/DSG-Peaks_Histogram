import pandas as pd
from scipy.signal import find_peaks
import os

def peak_table(input_file, labels):
    """
    import CSV file, identify 5 peaks (local maxima) with greatest magnitude, saves with labels in output CSV file named INPUT_FILE_NAME+'_PeakValues.csv' .
    input parameters:
    - input_file: The path to hist curve 
    - labels: The list of labels for output CSV
    """
    # Load CSV 
    df = pd.read_csv(input_file)

    # new df for peak data
    num_rows = 12
    empty_df = pd.DataFrame(index=range(num_rows), columns=df.columns[1:])  # not column 1

    # populate the first 2 rows of new df with RGB values at 1 and 255
    empty_df.iloc[0] = df.iloc[0, 1:]  
    empty_df.iloc[1] = df.iloc[-1, 1:]  

    # find 5 greatest peak magnitudes & locations, put in new df, column by column (exclude rows 1 and 255)
    for col_idx, col in enumerate(df.columns[1:], start=1):  
        column_data = df.iloc[1:-1, col_idx]  
        peaks, _ = find_peaks(column_data)  
        top_5 = column_data.iloc[peaks].nlargest(5)
        empty_df.iloc[2::2, col_idx-1] = top_5.values  
        empty_df.iloc[3::2, col_idx-1] = top_5.index  

    # save df to CSV format with labels in first col.
    base_name = os.path.splitext(input_file)[0]  
    output_file = f"{base_name}_PeakValues.csv"      
    df_with_labels = pd.concat([pd.Series(labels, name="Labels"), empty_df], axis=1)
    df_with_labels.to_csv(output_file, index=False)
    print(f"peak data saved to {output_file}")

# test use:
input_file = 'test.csv'  
labels = ["Yat0", "Yat255", "Px1", "Py1", "Px2", "Py2", "Px3", "Py3", "Px4", "Py4", "Px5", "Py5"]

# call fucntion
peak_table(input_file, labels)


'''
#BATCH PROCESSING

input_files = ['Test.csv', 'Test1.csv', 'Test2.csv', 'Test3.csv', 'Test4.csv', 'Test5.csv', 'Test6.csv', 'Test7.csv', 'Test8.csv']
labels = ["Yat0", "Yat255", "Px1", "Py1", "Px2", "Py2", "Px3", "Py3", "Px4", "Py4", "Px5", "Py5"]

for input_file in input_files:
    print(f"Processing {input_file}...")
    peak_table(input_file, labels)

'''
